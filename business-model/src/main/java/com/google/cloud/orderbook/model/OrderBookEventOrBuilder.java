/*
 * Copyright 2023 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: marketdata.proto

// Protobuf Java Version: 3.25.0
package com.google.cloud.orderbook.model;

public interface OrderBookEventOrBuilder extends
    // @@protoc_insertion_point(interface_extends:OrderBookEvent)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Millisecond timestamp
   * </pre>
   *
   * <code>int64 timestampMS = 1;</code>
   * @return The timestampMS.
   */
  long getTimestampMS();

  /**
   * <code>string sessionId = 17;</code>
   * @return The sessionId.
   */
  java.lang.String getSessionId();

  /**
   * <code>string sessionId = 17;</code>
   * @return The bytes for sessionId.
   */
  com.google.protobuf.ByteString
  getSessionIdBytes();

  /**
   * <pre>
   * Contract ID (unique ordering)
   * </pre>
   *
   * <code>int64 contractId = 2;</code>
   * @return The contractId.
   */
  long getContractId();

  /**
   * <pre>
   * Global and per-contract sequence ID.
   *
   * SequenceID 1 is the always the first message in the sequence.
   * The first message will have a meaningful OrderBookEvent (side, etc)
   * </pre>
   *
   * <code>int64 seqId = 4;</code>
   * @return The seqId.
   */
  long getSeqId();

  /**
   * <code>int64 contractSeqId = 5;</code>
   * @return The contractSeqId.
   */
  long getContractSeqId();

  /**
   * <pre>
   * This is true when it is the last message for the all contracts.
   * There will be no meaningful order information associated (or even
   * contractId).
   * </pre>
   *
   * <code>bool lastMessage = 6;</code>
   * @return The lastMessage.
   */
  boolean getLastMessage();

  /**
   * <pre>
   * This is true when it is the last message for the contract. There will
   * be no meaningful order information associated.
   * </pre>
   *
   * <code>bool lastContractMessage = 7;</code>
   * @return The lastContractMessage.
   */
  boolean getLastContractMessage();

  /**
   * <code>.OrderBookEvent.Type type = 8;</code>
   * @return The enum numeric value on the wire for type.
   */
  int getTypeValue();

  /**
   * <code>.OrderBookEvent.Type type = 8;</code>
   * @return The type.
   */
  com.google.cloud.orderbook.model.OrderBookEvent.Type getType();

  /**
   * <pre>
   * OrderID for the passive order.
   * </pre>
   *
   * <code>int64 orderId = 9;</code>
   * @return The orderId.
   */
  long getOrderId();

  /**
   * <pre>
   * enum Buy/Sell
   * </pre>
   *
   * <code>.OrderBookEvent.Side side = 10;</code>
   * @return The enum numeric value on the wire for side.
   */
  int getSideValue();

  /**
   * <pre>
   * enum Buy/Sell
   * </pre>
   *
   * <code>.OrderBookEvent.Side side = 10;</code>
   * @return The side.
   */
  com.google.cloud.orderbook.model.OrderBookEvent.Side getSide();

  /**
   * <code>int64 price = 11;</code>
   * @return The price.
   */
  long getPrice();

  /**
   * <code>int64 quantity = 12;</code>
   * @return The quantity.
   */
  long getQuantity();

  /**
   * <code>int64 quantityRemaining = 13;</code>
   * @return The quantityRemaining.
   */
  long getQuantityRemaining();

  /**
   * <code>int64 quantityFilled = 14;</code>
   * @return The quantityFilled.
   */
  long getQuantityFilled();

  /**
   * <pre>
   * If it is an execution, record the matchNumber
   * </pre>
   *
   * <code>int64 matchNumber = 15;</code>
   * @return The matchNumber.
   */
  long getMatchNumber();
}
