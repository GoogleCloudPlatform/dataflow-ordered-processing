// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: marketdata.proto

package com.google.cloud.orderbook.model;

public interface OrderBookEventOrBuilder extends
    // @@protoc_insertion_point(interface_extends:OrderBookEvent)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Millisecond timestamp
   * </pre>
   *
   * <code>int64 timestampMS = 1;</code>
   * @return The timestampMS.
   */
  long getTimestampMS();

  /**
   * <pre>
   * Contract ID (unique ordering)
   * </pre>
   *
   * <code>int64 contractId = 2;</code>
   * @return The contractId.
   */
  long getContractId();

  /**
   * <pre>
   * Message ID
   * </pre>
   *
   * <code>int64 messageId = 3;</code>
   * @return The messageId.
   */
  long getMessageId();

  /**
   * <pre>
   * Global and per-contract sequence ID.
   * </pre>
   *
   * <code>int64 seqId = 4;</code>
   * @return The seqId.
   */
  long getSeqId();

  /**
   * <code>int64 contractSeqId = 5;</code>
   * @return The contractSeqId.
   */
  long getContractSeqId();

  /**
   * <code>.OrderBookEvent.Type type = 6;</code>
   * @return The enum numeric value on the wire for type.
   */
  int getTypeValue();
  /**
   * <code>.OrderBookEvent.Type type = 6;</code>
   * @return The type.
   */
  com.google.cloud.orderbook.model.OrderBookEvent.Type getType();

  /**
   * <pre>
   * OrderID for the passive order.
   * </pre>
   *
   * <code>int64 orderId = 7;</code>
   * @return The orderId.
   */
  long getOrderId();

  /**
   * <pre>
   * enum Buy/Sell
   * </pre>
   *
   * <code>.OrderBookEvent.Side side = 8;</code>
   * @return The enum numeric value on the wire for side.
   */
  int getSideValue();
  /**
   * <pre>
   * enum Buy/Sell
   * </pre>
   *
   * <code>.OrderBookEvent.Side side = 8;</code>
   * @return The side.
   */
  com.google.cloud.orderbook.model.OrderBookEvent.Side getSide();

  /**
   * <code>int64 price = 9;</code>
   * @return The price.
   */
  long getPrice();

  /**
   * <code>int64 quantity = 10;</code>
   * @return The quantity.
   */
  long getQuantity();

  /**
   * <code>int64 quantityRemaining = 11;</code>
   * @return The quantityRemaining.
   */
  long getQuantityRemaining();

  /**
   * <code>int64 quantityFilled = 12;</code>
   * @return The quantityFilled.
   */
  long getQuantityFilled();

  /**
   * <pre>
   * If it is an execution, record the matchNumber
   * </pre>
   *
   * <code>int64 matchNumber = 13;</code>
   * @return The matchNumber.
   */
  long getMatchNumber();
}
